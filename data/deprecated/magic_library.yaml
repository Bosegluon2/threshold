id: "magic_library"
name: "魔法图书馆"
description: "一座古老的魔法图书馆，收藏着无数珍贵的魔法典籍和卷轴。空气中弥漫着淡淡的魔法能量，书架高耸入云，古老的魔法符文在墙壁上闪烁。"
type: "library"
is_accessible: true
parent_id: ""
position: [0, 0, 0]
capacity: 20
level: 5
tags: ["magic", "knowledge", "ancient", "library"]
state: "normal"
environment: "indoor"
can_get_time: true
can_get_weather: false
can_get_location: true
can_get_atmosphere: true
light_level: 0.8
temperature: 18.0

# 脚本驱动的效果 - 替代PlaceEffect
on_agent_enter_script: |
  # Agent进入魔法图书馆时执行的脚本
  print("Agent进入魔法图书馆")
  var agent = GetContext("agent")
  # 检查Agent是否有魔法理论技能
  if agent.Skills.ContainsKey("magic_theory"):
      var currentLevel = agent.Skills["magic_theory"].Level
      print("Agent的魔法理论技能等级: ", currentLevel)
      
      # 如果技能等级足够，给予知识增益
      if currentLevel >= 10:
          # 通过EventManager添加持续性效果
          var eventManager = GameManager.EventManager
          if eventManager != null:
              var knowledgeEffect = {
                  "effect_id": "library_knowledge_boost",
                  "effect_type": "knowledge_boost",
                  "duration": 5,
                  "target": agent.Id,
                  "skill": "magic_theory",
                  "value": 2
              }
              eventManager.AddCharacterEffect(knowledgeEffect)
              print("添加知识增益效果")
  
  # 设置Agent的状态
  agent.Status["in_magic_library"] = true
  agent.Status["last_visit"] = Global.globalVariables.get("current_turn", 0)
  
  return true

on_agent_leave_script: |
  # Agent离开魔法图书馆时执行的脚本
  print("Agent离开魔法图书馆")
  var agent = GetContext("agent")
  # 移除图书馆相关状态
  if agent.Status.ContainsKey("in_magic_library"):
      agent.Status.Remove("in_magic_library")
  
  # 记录访问历史
  var visitHistory = Global.globalVariables.get("library_visits", {})
  if not visitHistory.has(agent.Id):
      visitHistory[agent.Id] = 0
  visitHistory[agent.Id] += 1
  Global.globalVariables["library_visits"] = visitHistory
  
  print("Agent访问图书馆次数: ", visitHistory[agent.Id])
  
  return true
